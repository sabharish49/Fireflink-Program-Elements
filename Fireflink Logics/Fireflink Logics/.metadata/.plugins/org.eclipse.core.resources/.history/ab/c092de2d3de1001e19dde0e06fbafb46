package Practice;

import java.net.MalformedURLException;
import java.net.URL;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.DesiredCapabilities;
import io.appium.java_client.TouchAction;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.touch.offset.PointOption;

public class DatePicker {
    static int Year = 1998;

    public static void main(String[] args) throws InterruptedException, MalformedURLException {
    	
        DesiredCapabilities dc = new DesiredCapabilities();
        dc.setCapability("noReset", "true");
        dc.setCapability("platformName", "Android");
        URL url = new URL("http://localhost:4723/wd/hub");
        AndroidDriver driver = new AndroidDriver(url, dc);
        System.out.println("app launched");
        WebElement calendar = driver.findElement(By.xpath("	"));
        Thread.sleep(1000);
        WebElement currentyear = driver.findElement(By.xpath("//android.widget.TextView[@resource-id='android:id/date_picker_header_year']"));
        String curYear = currentyear.getText();
        System.out.println(curYear);
        int curyear = Integer.parseInt(curYear);
        System.out.println(curyear);
        if (curyear != Year) {
            currentyear.click();          
            while (!isElementVisible(targetElement)) {
                scrollDown(driver, calendar);
            }
        }
    }

    public static void scrollDown(AndroidDriver driver) {
        Dimension size = driver.manage().window().getSize();
        int startX = size.width / 2;
        int startY = (int) (size.height * 0.8); // Start from 80% down the screen
        int endY = (int) (size.height * 0.2); // End at 20% up the screen

        TouchAction<?> touchAction = new TouchAction<>(driver);
        touchAction.press(PointOption.point(startX, startY))
                .waitAction().moveTo(PointOption.point(startX, endY))
                .release()
                .perform();
    }

    public static boolean isElementVisible(WebElement element) {
        try {
            return element.isDisplayed();
        } catch (org.openqa.selenium.NoSuchElementException | org.openqa.selenium.StaleElementReferenceException e) {
            return false;
        }
    }
}
