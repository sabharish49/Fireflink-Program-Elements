package default_package;
import java.time.Duration;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;

import com.tyss.optimize.common.util.CommonConstants;
import com.tyss.optimize.nlp.util.Nlp;
import com.tyss.optimize.nlp.util.NlpException;
import com.tyss.optimize.nlp.util.NlpRequestModel;
import com.tyss.optimize.nlp.util.NlpResponseModel;
import com.tyss.optimize.nlp.util.annotation.InputParam;
import com.tyss.optimize.nlp.util.annotation.InputParams;
import com.tyss.optimize.nlp.util.annotation.ReturnType;

import io.appium.java_client.android.AndroidDriver;


public class swipeElementFromLeftToRight implements Nlp {
	@InputParams({ @InputParam(name = "strike", type = "java.lang.String"),
		@InputParams({ @InputParam(name = "ltpType", type = "java.lang.String")})
	@ReturnType(name = "result", type = "java.lang.Boolean")

	@Override
	public List<String> getTestParameters() throws NlpException {
		List<String> params = new ArrayList<>();
		return params;
	}

	@Override
	public StringBuilder getTestCode() throws NlpException {
		StringBuilder sb = new StringBuilder();
		return sb;
	}

	@Override
	public NlpResponseModel execute(NlpRequestModel nlpRequestModel) throws NlpException {

		NlpResponseModel nlpResponseModel = new NlpResponseModel();
		Map<String, Object> attributes = nlpRequestModel.getAttributes();
		String strike = (String) attributes.get("strike");
		String ltpType = (String) attributes.get("ltpType");

		AndroidDriver driver = nlpRequestModel.getAndroidDriver();
		Duration implicitWait = driver.manage().timeouts().getImplicitWaitTimeout();

		boolean res = false;
		try {
			driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(5));

			boolean isClicked=false;
			int count=0;
			if(ltpType.equalsIgnoreCase("Call LTP")){
				while(isClicked==false && count<=30) {
					try
					{
						WebElement callElement= driver.findElement(By.xpath("//android.widget.TextView[@text='"+strike+"']/preceding-sibling::android.view.View[@resource-id='com.choiceequitybroking.jiffy:id/vCallClicker']"));
						callElement.click();
						isClicked=true;
					}
					catch(Exception e)
					{

					}
					count++;
				}
			}
			else if(ltpType.equalsIgnoreCase("Put LTP")) {
				while(isClicked==false && count<=30) {
					try
					{
						WebElement putElement= driver.findElement(By.xpath("//android.widget.TextView[@text='"+strike+"']/following-sibling::android.view.View[@resource-id='com.choiceequitybroking.jiffy:id/vPutClicker']"));
						putElement.click();
						isClicked=true;
					}
					catch(Exception e)
					{

					}
					count++;
				}
			}


			res=true;
			nlpResponseModel.setStatus(CommonConstants.pass);
			nlpResponseModel.setMessage("Successfully tapped on the element");

		} catch (Exception e) {
			nlpResponseModel.setStatus(CommonConstants.fail);
			nlpResponseModel.setMessage("failed to tap on the element "+e);

		}
		finally {
			driver.manage().timeouts().implicitlyWait(implicitWait);

		}

		nlpResponseModel.getAttributes().put("result", res);
		return nlpResponseModel;
	}

	}