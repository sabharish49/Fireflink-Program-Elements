package com.tyss.optimize.programelement.LIC3320PJT1002.logics;

import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.openqa.selenium.WebDriver;
import org.springframework.stereotype.Component;

import com.tyss.optimize.common.util.CommonConstants;
import com.tyss.optimize.nlp.util.Nlp;
import com.tyss.optimize.nlp.util.NlpException;
import com.tyss.optimize.nlp.util.NlpRequestModel;
import com.tyss.optimize.nlp.util.NlpResponseModel;
import com.tyss.optimize.nlp.util.annotation.ReturnType;



@Component("LIC3320_PJT1002_PE_NLP70ec6310-8ba9-4365-961c-db57e1682f34")
public class OpenNewTab implements Nlp {
		
		   // @InputParams({@InputParam(name = "url", type = "java.lang.String"),
		   // @InputParam(name = "seconds", type = "java.lang.Integer")})
		    @ReturnType(name = "result", type = "java.lang.Boolean")

		      @Override
		      public List<String> getTestParameters() throws NlpException {
		        List<String> params = new ArrayList<>();
		        return params;
		      }

		      @Override
		      public StringBuilder getTestCode() throws NlpException {
		        StringBuilder sb = new StringBuilder();
		        return sb;
		      }
		      @Override
		      public NlpResponseModel execute(NlpRequestModel nlpRequestModel) throws NlpException {
		        
		          NlpResponseModel nlpResponseModel = new NlpResponseModel();
		          Map<String, Object> attributes = nlpRequestModel.getAttributes();
		          //String url = (String) attributes.get("url");
		         // Integer seconds = (Integer) attributes.get("seconds");

		          // Your program element business logic goes here ...
		          boolean result=true;
		          WebDriver driver=nlpRequestModel.getWebDriver(); {
		        	 try {
		               Robot r=new Robot();
		             
		     		  r.keyPress(KeyEvent.VK_CONTROL);
		     		  r.keyPress(KeyEvent.VK_T);
		     		  
		     		 r.keyRelease(KeyEvent.VK_CONTROL);
		     		 r.keyRelease(KeyEvent.VK_T);
		               
		               driver =nlpRequestModel.getWebDriver();
		               nlpRequestModel.setWebDriver(driver);
		        	    
		               result=true;
		              
		                  nlpResponseModel.setStatus(CommonConstants.pass);
		                  nlpResponseModel.setMessage("launched successfull");
		              
		          }  
		          catch(Exception e)
		          {
		        	  result=false;
		        	  nlpResponseModel.setStatus(CommonConstants.fail);
	                  nlpResponseModel.setMessage("failed to launch");
		          }
		          nlpResponseModel.getAttributes().put("result", result);
				  return nlpResponseModel;
	}
		      }
}




