package bussiness_logic;

import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import com.tyss.optimize.common.util.CommonConstants;
import com.tyss.optimize.nlp.util.Nlp;
import com.tyss.optimize.nlp.util.NlpException;
import com.tyss.optimize.nlp.util.NlpRequestModel;
import com.tyss.optimize.nlp.util.NlpResponseModel;
import com.tyss.optimize.nlp.util.annotation.InputParam;
import com.tyss.optimize.nlp.util.annotation.InputParams;
import com.tyss.optimize.nlp.util.annotation.ReturnType;

	import org.springframework.stereotype.Component;

@Component("LIC14952_PJT1001_PE_NLPeb790efb-450d-46c6-81e5-f0fc6f6677f8")
public class FetchDataFromTextWriteInExcelCell implements Nlp {
	    @InputParams({@InputParam(name = "pdfFilePath", type = "java.lang.String"),
	    @InputParam(name = "excelFilePath", type = "java.lang.String")})
	    @ReturnType(name = "result", type = "java.lang.Boolean")

	      @Override
	      public List<String> getTestParameters() throws NlpException {
	        List<String> params = new ArrayList<>();
	        return params;
	      }

	      @Override
	      public StringBuilder getTestCode() throws NlpException {
	        StringBuilder sb = new StringBuilder();
	        return sb;
	      }
	      @Override
	      public NlpResponseModel execute(NlpRequestModel nlpRequestModel) throws NlpException {
	        
	          NlpResponseModel nlpResponseModel = new NlpResponseModel();
	          Map<String, Object> attributes = nlpRequestModel.getAttributes();
	          String pdfFilePath = (String) attributes.get("pdfFilePath");
	          String excelFilePath = (String) attributes.get("excelFilePath");
	          boolean result=true;

	          // Your program element business logic goes here ...
	          try {
	        	  PDDocument document = PDDocument.load(new File(pdfFilePath));
	              PDFTextStripper pdfStripper = new PDFTextStripper();
	              String pdfText = pdfStripper.getText(document);
	              document.close();
	              Workbook workbook = new XSSFWorkbook();
	              Sheet sheet = workbook.createSheet("PDF Data");
	              String[] lines = pdfText.split("\\r?\\n");

	              for (int i = 0; i < lines.length; i++) {
	                  Row row = sheet.createRow(i);
	                  Cell cell = row.createCell(0);
	                  cell.setCellValue(lines[i]);
	              }
	              FileOutputStream fos = new FileOutputStream(excelFilePath); 
	                  workbook.write(fos);
	                  workbook.close();
				
	          		 result=true;
		            nlpResponseModel.setStatus(CommonConstants.pass);
		            nlpResponseModel.setMessage("converted successfully");
	          }
	          catch (Exception e) {
	        	  nlpResponseModel.setStatus(CommonConstants.fail);
		            nlpResponseModel.setMessage("not converted");
		            result=false;
				
			}
	          

	          //String string3 = "Return Value";
	          nlpResponseModel.getAttributes().put("result", result);
	          return nlpResponseModel;
	      }
	  } 



