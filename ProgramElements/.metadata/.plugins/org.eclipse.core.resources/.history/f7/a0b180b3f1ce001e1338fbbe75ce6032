package bussiness_logic;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import com.tyss.optimize.common.util.CommonConstants;
import com.tyss.optimize.nlp.util.Nlp;
import com.tyss.optimize.nlp.util.NlpException;
import com.tyss.optimize.nlp.util.NlpRequestModel;
import com.tyss.optimize.nlp.util.NlpResponseModel;
import com.tyss.optimize.nlp.util.annotation.InputParam;
import com.tyss.optimize.nlp.util.annotation.InputParams;
import com.tyss.optimize.nlp.util.annotation.ReturnType;

import org.springframework.stereotype.Component;

@Component("LIC14952_PJT1001_PE_NLP13060a92-4b3f-4956-b154-470676923749")
public class WritingDataToExcel implements Nlp {
	
	    @InputParams({@InputParam(name = "excelPath", type = "java.lang.String"),
	    @InputParam(name = "cellValue", type = "java.lang.String"),
	    @InputParam(name = "sheetName", type = "java.lang.String"),
	    @InputParam(name = "rowNum", type = "java.lang.Integer"),
	    @InputParam(name = "colNum", type = "java.lang.Integer")})
	    @ReturnType(name = "result", type = "java.lang.Boolean")

	      @Override
	      public List<String> getTestParameters() throws NlpException {
	        List<String> params = new ArrayList<>();
	        return params;
	      }

	      @Override
	      public StringBuilder getTestCode() throws NlpException {
	        StringBuilder sb = new StringBuilder();
	        return sb;
	      }
	      @Override
	      public NlpResponseModel execute(NlpRequestModel nlpRequestModel) throws NlpException {
	        
	          NlpResponseModel nlpResponseModel = new NlpResponseModel();
	          Map<String, Object> attributes = nlpRequestModel.getAttributes();
	          String excelPath = (String) attributes.get("excelPath");
	          String cellValue = (String) attributes.get("cellValue");
	          String sheetName = (String) attributes.get("sheetName");
	          Integer rowNum = (Integer) attributes.get("rowNum");
	          Integer colNum = (Integer) attributes.get("colNum");

	          // Your program element business logic goes here ...
	          
	           Boolean result=true;
	           
	           try {
	        	   Workbook workbook = new XSSFWorkbook();
	               Sheet sheet = workbook.createSheet(sheetName);
	               Row row = sheet.getRow(rowNum);
	               if (row == null) {
	                   row = sheet.createRow(rowNum);
	               }

	              
	               Cell cell = row.createCell(colNum);


	               cell.setCellValue(cellValue);
	               FileOutputStream outputStream = new FileOutputStream(excelPath);
	               workbook.write(outputStream);
	               outputStream.close();
	        		   result=true;
	        		   nlpResponseModel.setStatus(CommonConstants.pass);
	        		   nlpResponseModel.setMessage(" data eneterd to  excel successfully");
	        	   	   
			} 
	           catch (Exception e) {
				result=false;
				nlpResponseModel.setStatus(CommonConstants.fail);
	 		   nlpResponseModel.setMessage("failed to enter data to excel" +e);
			}
	         
	          nlpResponseModel.getAttributes().put("result", result);
	          return nlpResponseModel;
	      }
	  } 









	


