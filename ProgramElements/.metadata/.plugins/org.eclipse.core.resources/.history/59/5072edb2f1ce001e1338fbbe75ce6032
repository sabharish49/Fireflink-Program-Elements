package bussiness_logic;



import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

import com.tyss.optimize.common.util.CommonConstants;
import com.tyss.optimize.nlp.util.Nlp;
import com.tyss.optimize.nlp.util.NlpException;
import com.tyss.optimize.nlp.util.NlpRequestModel;
import com.tyss.optimize.nlp.util.NlpResponseModel;
import com.tyss.optimize.nlp.util.annotation.InputParam;
import com.tyss.optimize.nlp.util.annotation.InputParams;
import com.tyss.optimize.nlp.util.annotation.ReturnType;

import org.springframework.stereotype.Component;

@Component("LIC14952_PJT1001_PE_NLP53138372-0cc0-4c34-a086-ddd600fa574c")
public class DifferenceBetweenTwoTimings implements Nlp {
	
	    @InputParams({@InputParam(name = "element1", type = "org.openqa.selenium.WebElement"),
	    	@InputParam(name = "element2", type = "org.openqa.selenium.WebElement")})
	    @ReturnType(name = "result", type = "java.lang.Boolean")

	      @Override
	      public List<String> getTestParameters() throws NlpException {
	        List<String> params = new ArrayList<>();
	        return params;
	      }

	      @Override
	      public StringBuilder getTestCode() throws NlpException {
	        StringBuilder sb = new StringBuilder();
	        return sb;
	      }
	      @Override
	      public NlpResponseModel execute(NlpRequestModel nlpRequestModel) throws NlpException {
	        
	          NlpResponseModel nlpResponseModel = new NlpResponseModel();
	          Map<String, Object> attributes = nlpRequestModel.getAttributes();
	          WebElement element1 = (WebElement) attributes.get("element1");
	          WebElement element2 = (WebElement) attributes.get("element2");
	          
	          WebDriver driver = nlpRequestModel.getWebDriver();
	          boolean result=true;
	          try {
	        	  String time1=element1.getText();
	        	  String time2=element2.getText();
	        	  SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
	        	  SimpleDateFormat outputSdf = new SimpleDateFormat("hh:mm a");
	        	  
	        	  Date date = sdf.parse(time1);
	              
	              String outputTime1 = outputSdf.format(date);
	              Date firstTime = sdf.parse(outputTime1);
	             
	              Date date1 = sdf.parse(time2);
	              String outputTime2 = outputSdf.format(date1);
	              Date secondTime = sdf.parse(outputTime2);	  
	        	  
	              long timeDifference = firstTime.getTime() - secondTime.getTime();
	              
	              
	              long minutes = timeDifference / (60 * 1000);
	              long hours = minutes / 60;
	              
	              
	              minutes %= 60;
	              
	        	  
				    	  nlpResponseModel.setStatus(CommonConstants.pass);
				    	  nlpResponseModel.setMessage(" time difference fetched"+hours+minutes);
				  
				      
			} catch (Exception e) 
	          {
				
		    	  nlpResponseModel.setStatus(CommonConstants.fail);
		    	  nlpResponseModel.setMessage("failed to fetch time difference");

				
			}
	          
	          
	          nlpResponseModel.getAttributes().put("result", result);
	          return nlpResponseModel;
	      }
	  } 
		
