package com.tyss.optimize.programelement.LIC22770PJT1001.bussiness_logic;

import java.time.Duration;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.List;
import java.util.Map;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.PointerInput;
import org.openqa.selenium.interactions.Sequence;

import com.tyss.optimize.common.util.CommonConstants;
import com.tyss.optimize.nlp.util.Nlp;
import com.tyss.optimize.nlp.util.NlpException;
import com.tyss.optimize.nlp.util.NlpRequestModel;
import com.tyss.optimize.nlp.util.NlpResponseModel;
import com.tyss.optimize.nlp.util.annotation.InputParam;
import com.tyss.optimize.nlp.util.annotation.InputParams;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.ios.IOSDriver;


public class PickTheDate implements Nlp {
	@InputParams({ @InputParam(name = "maxSwipeCount", type = "java.lang.Integer"),
			@InputParam(name = "Age", type = "java.lang.Integer"),
			@InputParam(name = "yearLimit", type = "java.lang.Integer") })
	
	

	@Override
	public List<String> getTestParameters() throws NlpException {
		List<String> params = new ArrayList<>();
		return params;
	}

	@Override
	public StringBuilder getTestCode() throws NlpException {
		StringBuilder sb = new StringBuilder();
		return sb;
	}

	@Override
	public NlpResponseModel execute(NlpRequestModel nlpRequestModel) throws NlpException {

		NlpResponseModel nlpResponseModel = new NlpResponseModel();
		Map<String, Object> attributes = nlpRequestModel.getAttributes();

		Integer maxSwipeCount = (Integer) attributes.get("maxSwipeCount");
		Integer Age = (Integer) attributes.get("Age");
		Integer yearLimit = (Integer) attributes.get("yearLimit");

		AndroidDriver androidDriver = nlpRequestModel.getAndroidDriver();
		IOSDriver iosDriver = nlpRequestModel.getIosDriver();

		Calendar calendar = Calendar.getInstance();
    	int currentYear = calendar.get(Calendar.YEAR);
    	int  yearfewYearsAgo = currentYear-Age;
    
		try {
			
			if(androidDriver!=null) {

			WebElement element = androidDriver.findElement(By.xpath(
    		"//android.widget.Button[contains(@content-desc,'Select')]/android.view.View/android.view.View"));
    		int x = element.getLocation().getX();
    		int y = element.getLocation().getY();
    		int width = element.getSize().getWidth();
    		int height = element.getSize().getHeight();
    		int startX = (int) (x + (width * 0.5));
    		int startY = (int) (y + (height * 0.8));
    		int endX = (int) (x + width);
    		int endY = (int) (y + (height * 0.5));

    		int centerX = 457;
    		int centerY = 855;
    		PointerInput finger = new PointerInput(PointerInput.Kind.TOUCH, "finger");

    		Sequence tap = new Sequence(finger, 1)
    				.addAction(finger.createPointerMove(Duration.ZERO, PointerInput.Origin.viewport(), centerX, centerY))
    				.addAction(finger.createPointerDown(PointerInput.MouseButton.LEFT.asArg()))
    				.addAction(finger.createPointerUp(PointerInput.MouseButton.LEFT.asArg()));
    		androidDriver.perform(Arrays.asList(tap));

    		for (int i = 0; i < maxSwipeCount;) {
    			if(yearfewYearsAgo>yearLimit) {
    	    		nlpResponseModel.setStatus(CommonConstants.fail);
    				nlpResponseModel.setMessage("You have entered the incorrect year to Tap");
    				break;
    	    	}
    			else {
    	    	
    			
    			PointerInput finger1 = new PointerInput(PointerInput.Kind.TOUCH, "finger1");

    			
    			Sequence swipe = new Sequence(finger1, 1)
    					.addAction(finger1.createPointerMove(Duration.ZERO, PointerInput.Origin.viewport(), endX, endY))
    					.addAction(finger1.createPointerDown(PointerInput.MouseButton.LEFT.asArg())).addAction(finger1
    							.createPointerMove(Duration.ofMillis(1000), PointerInput.Origin.viewport(), startX, startY))
    					.addAction(finger1.createPointerUp(PointerInput.MouseButton.LEFT.asArg()));

    		
    			androidDriver.perform(Arrays.asList(swipe));

    			    			try {
    			    				 Boolean SelectYear = androidDriver.findElement(By.xpath("//android.widget.Button[@content-desc='" + yearfewYearsAgo + "']"))
    						.isDisplayed();
    			    				androidDriver
    						.findElement(By.xpath("//android.widget.Button[@content-desc='" + yearfewYearsAgo + "']"))
    						.click();
    			    				androidDriver.findElement(By.xpath("//android.widget.Button[@content-desc=\"OK\"]")).click();
    			    				nlpResponseModel.setStatus(CommonConstants.pass);
    			    				nlpResponseModel.setMessage("SuccessFully Selected The Date" +SelectYear);
    				break;

    			} catch (NoSuchElementException e) {
    			
    			
    				i++;
    				nlpResponseModel.setStatus(CommonConstants.fail);
    				nlpResponseModel.setMessage("Element Not Found" +e);

    			} catch (Exception f) {
    				nlpResponseModel.setStatus(CommonConstants.fail);
    				nlpResponseModel.setMessage("Failed to select The Year" +f);
    			}
    			}
    		}
			
			} 
			else {
				
				WebElement element = iosDriver.findElement(By.xpath(
			    		"//XCUIElementTypeButton[contains(@name,\"Select\")]/..//XCUIElementTypeScrollView"));
			    		int x = element.getLocation().getX();
			    		int y = element.getLocation().getY();
			    		int width = element.getSize().getWidth();
			    		int height = element.getSize().getHeight();
			    		int startX = (int) (x + (width * 0.5));
			    		int startY = (int) (y + (height * 0.8));
			    		int endX = (int) (x + width);
			    		int endY = (int) (y + (height * 0.5));

			    		int centerX = 189;
			    		int centerY = 342;
			    		PointerInput finger = new PointerInput(PointerInput.Kind.TOUCH, "finger");

			    		Sequence tap = new Sequence(finger, 1)
			    				.addAction(finger.createPointerMove(Duration.ZERO, PointerInput.Origin.viewport(), centerX, centerY))
			    				.addAction(finger.createPointerDown(PointerInput.MouseButton.LEFT.asArg()))
			    				.addAction(finger.createPointerUp(PointerInput.MouseButton.LEFT.asArg()));
			    		iosDriver.perform(Arrays.asList(tap));

			    		for (int i = 0; i < maxSwipeCount;) {
			    			if(yearfewYearsAgo>yearLimit) {
			    	    		nlpResponseModel.setStatus(CommonConstants.fail);
			    				nlpResponseModel.setMessage("You have entered the incorrect year to Tap");
			    	    	}
			    			else {
			    			PointerInput finger1 = new PointerInput(PointerInput.Kind.TOUCH, "finger1");

			    			
			    			Sequence swipe = new Sequence(finger1, 1)
			    					.addAction(finger1.createPointerMove(Duration.ZERO, PointerInput.Origin.viewport(), endX, endY))
			    					.addAction(finger1.createPointerDown(PointerInput.MouseButton.LEFT.asArg())).addAction(finger1
			    							.createPointerMove(Duration.ofMillis(1000), PointerInput.Origin.viewport(), startX, startY))
			    					.addAction(finger1.createPointerUp(PointerInput.MouseButton.LEFT.asArg()));

			    		
			    			iosDriver.perform(Arrays.asList(swipe));

			    			    			try {
			    			    				iosDriver.findElement(By.xpath("//XCUIElementTypeScrollView/..//XCUIElementTypeButton[@name='"+yearfewYearsAgo +"']"))
			    						.isDisplayed();
			    			    				iosDriver
			    						.findElement(By.xpath("\"//XCUIElementTypeScrollView/..//XCUIElementTypeButton[@name='"+yearfewYearsAgo +"']"))
			    						.click();
			    			    				iosDriver.findElement(By.xpath("//XCUIElementTypeButton[@name=\"OK\"]")).click();
			    			    				nlpResponseModel.setStatus(CommonConstants.pass);
			    			    				nlpResponseModel.setMessage("SuccessFully Selected The Date");
			    				break;

			    			} catch (NoSuchElementException e) {
			    				i++;
			    				nlpResponseModel.setStatus(CommonConstants.fail);
			    				nlpResponseModel.setMessage("Element Not Found");
			    				

			    			} catch (Exception f) {
			    				nlpResponseModel.setStatus(CommonConstants.fail);
			    				nlpResponseModel.setMessage("Failed to select The Year" +f);

			    			}

			    		}
			    		}
			

			}
			nlpResponseModel.setStatus(CommonConstants.pass);
			nlpResponseModel.setMessage("Successfully cameout from outer try block");

		} catch (Exception e) {
			nlpResponseModel.setStatus(CommonConstants.fail);
			nlpResponseModel.setMessage("Failed to select the date outside the catch block" + e);
		}

		
		return nlpResponseModel;
	}
}
